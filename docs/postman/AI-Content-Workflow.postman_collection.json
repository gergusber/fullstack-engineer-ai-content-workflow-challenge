{
  "info": {
    "name": "AI Content Workflow - Complete Pipeline",
    "description": "## ðŸš€ AI Content Workflow API Collection\n\nThis comprehensive Postman collection covers the complete content lifecycle from campaign creation to AI-powered translation and approval.\n\n### ðŸ”„ **Complete Workflow**\n1. **Campaign Management** - Create and manage content campaigns\n2. **Content Creation** - Create, update, and manage content pieces\n3. **Review Workflow** - Submit content for review and approval\n4. **AI Translation** - Translate content using AI models with cultural adaptation\n5. **AI Content Generation** - Generate content variations and compare AI models\n6. **Translation Management** - Modern translation approval workflow\n7. **Content Analytics** - Track versions, drafts, and review history\n8. **Advanced Search** - Filter and search content with multiple criteria\n\n### ðŸŽ¯ **Key Features**\n- **Automated Variable Management** - Auto-populates IDs and data\n- **Comprehensive Test Scripts** - Detailed logging and validation\n- **Realistic Data Examples** - Production-ready request payloads\n- **Error Handling** - Robust error detection and reporting\n- **Performance Monitoring** - Response time and quality metrics\n\n### ðŸ”§ **Quick Start**\n1. Import both collection and environment files\n2. Ensure backend server is running on localhost:3001\n3. Run requests in sequence starting with 'Create Campaign'\n4. Monitor console for detailed execution logs\n\n### ðŸ“Š **Success Metrics**\n- Quality scores > 0.8 for AI generations\n- Response times < 2000ms for standard requests\n- Translation approval workflow completion\n- Proper state transitions and data persistence",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "2.1.0"
  },
  "item": [
    {
      "name": "1. Campaign Management",
      "item": [
        {
          "name": "Create Campaign",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "description": "## ðŸš€ Create New Campaign\n\n**Purpose**: Creates a new content campaign that will serve as a container for all related content pieces.\n\n**Key Features**:\n- Auto-generates campaign UUID\n- Sets initial status to 'draft'\n- Supports multiple target markets\n- Includes comprehensive metadata\n\n**Success Criteria**:\n- Returns 201 status code\n- Campaign ID is auto-saved to environment\n- Response includes all campaign details\n\n**Next Steps**: Use the saved campaignId to create content pieces",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('campaignId', response.data.id);",
                  "    console.log('Campaign ID saved:', response.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Summer 2024 Global Product Launch\",\n  \"description\": \"Comprehensive international campaign for our new summer product line targeting multiple markets\",\n  \"status\": \"draft\",\n  \"targetMarkets\": [\"US\", \"ES\", \"DE\", \"FR\", \"IT\"],\n  \"tags\": [\"product-launch\", \"summer\", \"international\", \"social-media\", \"blog\"],\n  \"createdBy\": \"campaign-manager@company.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns"]
            }
          }
        },
        {
          "name": "Get Campaign",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}"]
            }
          }
        },
        {
          "name": "Campaign Stats",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}", "stats"]
            }
          }
        },
        {
          "name": "Update Campaign",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Summer 2024 Global Product Launch\",\n  \"description\": \"Enhanced comprehensive international campaign for our new summer product line targeting multiple markets with updated strategy\",\n  \"status\": \"active\",\n  \"targetMarkets\": [\"US\", \"ES\", \"DE\", \"FR\", \"IT\", \"JP\"],\n  \"tags\": [\"product-launch\", \"summer\", \"international\", \"social-media\", \"blog\", \"updated\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}"]
            }
          }
        },
        {
          "name": "Delete Campaign",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}"]
            }
          }
        },
        {
          "name": "List All Campaigns",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/campaigns",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns"]
            }
          }
        }
      ]
    },
    {
      "name": "2. Content Creation",
      "item": [
        {
          "name": "Create Content Piece",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('contentId', response.data.id);",
                  "    console.log('Content ID saved:', response.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"campaignId\": \"{{campaignId}}\",\n  \"title\": \"Summer Fashion Trends 2024: The Ultimate Guide for Professionals\",\n  \"description\": \"A comprehensive guide showcasing the versatility and elegance of our summer collection, specifically designed for young professionals who want to look stylish while maintaining workplace appropriateness\",\n  \"contentType\": \"blog_post\",\n  \"sourceLanguage\": \"en\",\n  \"targetLanguage\": \"en\",\n  \"priority\": \"high\",\n  \"originalPrompt\": \"Write a comprehensive blog post about summer fashion trends for young professionals, focusing on versatile pieces that work for both work and weekend, emphasizing our new summer collection\",\n  \"contentMetadata\": {\n    \"seoKeywords\": [\"summer fashion\", \"professional attire\", \"workplace style\", \"versatile clothing\", \"summer trends 2024\"],\n    \"targetAudience\": \"young professionals aged 25-35\",\n    \"estimatedWordCount\": 1500,\n    \"industry\": \"fashion\",\n    \"contentGoal\": \"product promotion and brand awareness\"\n  },\n  \"finalText\": \"Summer is here, and with it comes the perfect opportunity to refresh your professional wardrobe with pieces that seamlessly transition from boardroom to happy hour. Our 2024 summer collection embodies the perfect balance of sophistication and comfort, offering young professionals the versatility they crave in today's dynamic work environment.\\n\\nThe key to mastering summer professional style lies in choosing pieces that are both breathable and polished. Lightweight blazers in linen blends provide structure without the bulk, while our signature moisture-wicking dress shirts ensure you stay cool during those intense afternoon meetings. For women, our midi dresses in wrinkle-resistant fabrics offer elegance that travels well from office presentations to client dinners.\\n\\nColor psychology plays a crucial role in professional summer dressing. While traditional navy and black remain staples, this season we're embracing sophisticated shades like sage green, warm terracotta, and classic cream. These colors project confidence while remaining appropriately conservative for professional settings.\",\n  \"createdBy\": \"content-creator@company.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content"]
            }
          }
        },
        {
          "name": "Get Content Piece",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}"]
            }
          }
        },
        {
          "name": "Update Content Piece",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Summer Fashion Trends 2024: The Complete Guide for Modern Professionals\",\n  \"description\": \"An enhanced comprehensive guide showcasing the versatility and elegance of our summer collection, specifically designed for young professionals who want to look stylish while maintaining workplace appropriateness. Now with sustainability focus.\",\n  \"priority\": \"critical\",\n  \"contentMetadata\": {\n    \"seoKeywords\": [\"summer fashion\", \"professional attire\", \"workplace style\", \"versatile clothing\", \"summer trends 2024\", \"sustainable fashion\"],\n    \"targetAudience\": \"young professionals aged 25-35\",\n    \"estimatedWordCount\": 1800,\n    \"industry\": \"fashion\",\n    \"contentGoal\": \"product promotion, brand awareness, and sustainability messaging\",\n    \"lastUpdated\": \"2024-09-24\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}"]
            }
          }
        },
        {
          "name": "Delete Content Piece",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Review Workflow",
      "item": [
        {
          "name": "Submit for Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reviewerIds\": [\"{{reviewerId}}\", \"{{translatorId}}\"],\n  \"priority\": \"high\",\n  \"comments\": \"Please review this content for translation readiness. Focus on international market adaptation and cultural sensitivity. This will be translated to {{targetMarkets}} markets.\",\n  \"requestedBy\": \"{{userId}}\",\n  \"deadline\": \"2024-10-15\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/submit-for-review",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "submit-for-review"]
            }
          }
        },
        {
          "name": "Update Review State",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"newState\": \"reviewed\",\n  \"reviewType\": \"content_review\",\n  \"action\": \"approve\",\n  \"comments\": \"Content is excellent and ready for translation. The language is clear, culturally neutral, and professional. SEO keywords are well-integrated. Approved for all target markets: {{targetMarkets}}.\",\n  \"suggestions\": \"Consider adding cultural notes for specific markets regarding business attire expectations and local preferences.\",\n  \"reviewerId\": \"{{reviewerId}}\",\n  \"reviewerName\": \"{{userName}}\",\n  \"reviewerRole\": \"{{userRole}}\",\n  \"reviewDate\": \"{{$timestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/review-state",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "review-state"]
            }
          }
        },
        {
          "name": "Approve Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reviewerId\": \"translation-manager@company.com\",\n  \"reviewerName\": \"Maria Garcia\",\n  \"comments\": \"Content approved for international translation. All target markets have been considered. Ready for AI translation to Spanish, German, French, and Italian.\",\n  \"publishImmediately\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "approve"]
            }
          }
        },
        {
          "name": "Reject Content (Alternative)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reviewerId\": \"editor@company.com\",\n  \"reviewerName\": \"Sarah Johnson\",\n  \"reason\": \"Content needs revision for international markets. Some cultural references may not translate well.\",\n  \"suggestions\": \"Please revise cultural references in paragraphs 3 and 5 to be more universally applicable. Consider removing US-specific terminology.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/reject",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "reject"]
            }
          }
        }
      ]
    },
    {
      "name": "4. AI Translation",
      "item": [
        {
          "name": "Translate to Spanish",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('spanishContentId', response.data.translatedContent.id);",
                  "    console.log('Spanish Content ID saved:', response.data.translatedContent.id);",
                  "    console.log('Translation Quality Score:', response.data.translationResult.qualityScore);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceLanguage\": \"{{defaultLanguage}}\",\n  \"targetLanguage\": \"es\",\n  \"translationType\": \"localized\",\n  \"context\": \"Professional fashion content for Spanish market. Target audience is young professionals aged 25-35. Maintain professional tone while adapting to Spanish business culture. Consider both Spain and Latin American markets.\",\n  \"model\": \"{{aiModel}}\",\n  \"userId\": \"{{userId}}\",\n  \"priority\": \"high\",\n  \"deadline\": \"2024-10-01\",\n  \"culturalAdaptation\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/translate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "translate"]
            }
          }
        },
        {
          "name": "Translate to German",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('germanContentId', response.data.translatedContent.id);",
                  "    console.log('German Content ID saved:', response.data.translatedContent.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceLanguage\": \"en\",\n  \"targetLanguage\": \"de\",\n  \"translationType\": \"culturally_adapted\",\n  \"context\": \"Professional fashion content for German market. German business culture values precision, quality, and conservative professional appearance. Target audience is young professionals who appreciate engineering quality and attention to detail.\",\n  \"model\": \"claude\",\n  \"userId\": \"translator@company.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/translate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "translate"]
            }
          }
        },
        {
          "name": "Translate to French",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('frenchContentId', response.data.translatedContent.id);",
                  "    console.log('French Content ID saved:', response.data.translatedContent.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceLanguage\": \"en\",\n  \"targetLanguage\": \"fr\",\n  \"translationType\": \"localized\",\n  \"context\": \"Professional fashion content for French market. French business culture values elegance, sophistication, and linguistic precision. Maintain professional tone with French business etiquette.\",\n  \"model\": \"claude\",\n  \"userId\": \"translator@company.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/translate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "translate"]
            }
          }
        },
        {
          "name": "Translate to Italian",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('italianContentId', response.data.translatedContent.id);",
                  "    console.log('Italian Content ID saved:', response.data.translatedContent.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceLanguage\": \"en\",\n  \"targetLanguage\": \"it\",\n  \"translationType\": \"culturally_adapted\",\n  \"context\": \"Professional fashion content for Italian market. Italy has strong fashion heritage and sophisticated style expectations. Target audience appreciates quality, craftsmanship, and style innovation.\",\n  \"model\": \"claude\",\n  \"userId\": \"translator@company.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/translate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "translate"]
            }
          }
        },
        {
          "name": "Generate AI Content",
          "description": "## ðŸ¤– Generate AI Content Variations\n\n**Purpose**: Uses AI models to generate content variations, improvements, or completely new content based on existing content pieces.\n\n**Generation Types**:\n- `original`: Create new content from scratch\n- `variation`: Create variation of existing content\n- `improvement`: Enhance and improve existing content\n\n**Supported Models**:\n- `claude`: Anthropic Claude (recommended for creative content)\n- `openai`: OpenAI GPT (good for technical content)\n- `both`: Generate with both models for comparison\n\n**Quality Metrics**:\n- Quality score calculation based on relevance and structure\n- Response time monitoring\n- Cost tracking per generation\n- Token usage analysis\n\n**Success Indicators**:\n- Quality score > 0.8\n- Response time < 3000ms\n- AI draft record created\n- Content state updated to 'ai_suggested'",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.aiDraft) {",
                  "        pm.environment.set('aiDraftId', response.data.aiDraft.id);",
                  "        console.log('AI Draft ID saved:', response.data.aiDraft.id);",
                  "        console.log('Generated content quality score:', response.data.generationMetadata.qualityScore);",
                  "        console.log('Model used:', response.data.generationMetadata.model);",
                  "        console.log('Response time:', response.data.generationMetadata.responseTime + 'ms');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Create a compelling social media post version of this content that would engage young professionals on LinkedIn. Focus on career development and professional growth themes.\",\n  \"model\": \"claude\",\n  \"type\": \"variation\",\n  \"temperature\": 0.7,\n  \"maxTokens\": 800,\n  \"tone\": \"professional\",\n  \"userId\": \"content-creator@company.com\",\n  \"userName\": \"AI Content Assistant\",\n  \"context\": {\n    \"platform\": \"linkedin\",\n    \"audience\": \"young professionals\",\n    \"goal\": \"engagement and brand awareness\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/generate-ai-content",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "generate-ai-content"]
            }
          }
        },
        {
          "name": "Compare AI Models",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data) {",
                  "        console.log('Best model:', response.data.bestModel);",
                  "        console.log('Total comparison time:', response.data.totalTime + 'ms');",
                  "        console.log('Recommendations:', JSON.stringify(response.data.recommendations, null, 2));",
                  "        ",
                  "        // Log comparison details",
                  "        const comparison = response.data.comparison;",
                  "        Object.keys(comparison).forEach(model => {",
                  "            const result = comparison[model];",
                  "            if (result.error) {",
                  "                console.log(`${model}: ERROR - ${result.error}`);",
                  "            } else {",
                  "                console.log(`${model}: Quality ${result.qualityScore}, Time ${result.responseTime}ms, Cost $${result.cost}`);",
                  "            }",
                  "        });",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Create an engaging email subject line that would increase open rates for this content. The email will be sent to our professional newsletter subscribers.\",\n  \"models\": [\"claude\", \"openai\"],\n  \"userId\": \"marketing-manager@company.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/compare-ai-models",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "compare-ai-models"]
            }
          }
        }
      ]
    },
    {
      "name": "6. Translation Management",
      "item": [
        {
          "name": "Get Pending AI Draft Translations âœ¨ (New Workflow)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('=== PENDING AI DRAFT TRANSLATIONS ===');",
                  "    console.log('Total pending AI draft translations:', response.data.length);",
                  "    console.log('');",
                  "    if (response.data && response.data.length > 0) {",
                  "        // Save the first AI draft ID for approval workflow",
                  "        pm.environment.set('aiDraftId', response.data[0].aiDraft.id);",
                  "        console.log('AI Draft ID saved for approval:', response.data[0].aiDraft.id);",
                  "        console.log('');",
                  "        response.data.forEach((item, index) => {",
                  "            const aiDraft = item.aiDraft;",
                  "            const content = item.contentPiece;",
                  "            console.log(`AI Draft Translation ${index + 1}:`);",
                  "            console.log(`  AI Draft ID: ${aiDraft.id}`);",
                  "            console.log(`  Content: ${content.title}`);",
                  "            console.log(`  Language: ${content.sourceLanguage} -> ${content.targetLanguage}`);",
                  "            console.log(`  Model Used: ${aiDraft.modelUsed}`);",
                  "            console.log(`  Quality Score: ${aiDraft.qualityScore}`);",
                  "            console.log(`  Generated: ${aiDraft.createdAt}`);",
                  "            console.log(`  Status: PENDING REVIEW`);",
                  "            console.log('');",
                  "        });",
                  "        console.log('Next Step: Use \"Approve AI Draft Translation\" with saved aiDraftId');",
                  "    } else {",
                  "        console.log('âœ… No AI draft translations pending review.');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "## ðŸ¤– Get Pending AI Draft Translations\n\n**Purpose**: Returns all AI-generated translations that are pending human review. This is the primary endpoint for the modern translation workflow.\n\n**Key Features**:\n- Lists all pending AI draft translations across all content\n- Optionally filter by specific content ID using ?contentId=xxx\n- Auto-saves first AI draft ID for approval workflow\n- Shows translation quality scores and metadata\n\n**Modern Workflow**:\n1. Content gets translated (creates AI draft)\n2. Use this endpoint to see pending AI draft translations\n3. Review and approve/reject using AI draft ID\n4. Approved drafts become proper translation records\n\n**Success Criteria**:\n- Shows pending AI draft translations\n- Auto-saves aiDraftId to environment\n- Displays quality scores and translation details",
            "url": {
              "raw": "{{baseUrl}}/api/content/ai-draft-translations/pending",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "ai-draft-translations", "pending"]
            }
          }
        },
        {
          "name": "Get Pending AI Draft Translations by Content",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('=== PENDING AI DRAFT TRANSLATIONS FOR CONTENT ===');",
                  "    console.log('Content ID:', pm.environment.get('contentId'));",
                  "    console.log('Pending translations:', response.data.length);",
                  "    console.log('');",
                  "    if (response.data && response.data.length > 0) {",
                  "        // Save the first AI draft ID",
                  "        pm.environment.set('aiDraftId', response.data[0].aiDraft.id);",
                  "        console.log('AI Draft ID saved:', response.data[0].aiDraft.id);",
                  "        response.data.forEach((item, index) => {",
                  "            const aiDraft = item.aiDraft;",
                  "            const content = item.contentPiece;",
                  "            console.log(`Translation ${index + 1}:`);",
                  "            console.log(`  Target Language: ${content.targetLanguage}`);",
                  "            console.log(`  Quality Score: ${aiDraft.qualityScore}`);",
                  "            console.log(`  Model: ${aiDraft.modelUsed}`);",
                  "            console.log('');",
                  "        });",
                  "    } else {",
                  "        console.log('No pending AI draft translations for this content');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/content/ai-draft-translations/pending?contentId={{contentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "ai-draft-translations", "pending"],
              "query": [
                {
                  "key": "contentId",
                  "value": "{{contentId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Approve AI Draft Translation âœ¨ (Modern Workflow)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('=== AI DRAFT TRANSLATION APPROVED ===');",
                  "    console.log('Translation Record Created:', response.data.translation.id);",
                  "    console.log('Target Language:', response.data.translation.targetLanguage);",
                  "    console.log('Quality Score:', response.data.translation.qualityScore);",
                  "    console.log('Human Reviewed:', response.data.translation.isHumanReviewed);",
                  "    console.log('Translated Content ID:', response.data.translatedContent.id);",
                  "    console.log('Content Review State:', response.data.translatedContent.reviewState);",
                  "    console.log('');",
                  "    console.log('âœ… Translation approved and moved from AI draft to Translation record');",
                  "    console.log('âœ… Content piece review state updated to APPROVED');",
                  "    // Save translation ID for future reference",
                  "    pm.environment.set('approvedTranslationId', response.data.translation.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reviewerId\": \"{{userId}}\",\n  \"reviewerName\": \"{{userName}}\",\n  \"comments\": \"Translation approved after quality review. Cultural adaptation and terminology are appropriate for target market.\"\n}"
            },
            "description": "## âœ… Approve AI Draft Translation\n\n**Purpose**: Converts an AI draft translation into a proper translation record and marks the translated content as approved.\n\n**What This Does**:\n1. Takes an AI draft translation (pending review)\n2. Creates a proper Translation record in the database\n3. Marks the translation as human-reviewed\n4. Updates the translated content review state to APPROVED\n5. Makes the translation available for publication\n\n**Modern Workflow**:\n- This replaces the old direct translation approval\n- Uses AI draft ID instead of translation ID\n- Creates the translation record upon approval\n- Provides proper audit trail\n\n**Success Criteria**:\n- AI draft converted to translation record\n- Content review state updated to APPROVED\n- Human review flags set appropriately\n- Quality scores preserved",
            "url": {
              "raw": "{{baseUrl}}/api/content/ai-draft-translations/{{aiDraftId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "ai-draft-translations", "{{aiDraftId}}", "approve"]
            }
          }
        },
        {
          "name": "Get Content Translations",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('Found', response.data.length, 'translation records for this content');",
                  "    response.data.forEach((translation, index) => {",
                  "        console.log(`Translation ${index + 1}: ${translation.sourceLanguage} -> ${translation.targetLanguage}, Quality: ${translation.qualityScore}, Reviewed: ${translation.isHumanReviewed}`);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/translations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "translations"]
            }
          }
        }
      ]
    },
    {
      "name": "7. Content Management & Analytics",
      "item": [
        {
          "name": "Get Content Versions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log(`Found ${response.data.length} content versions`);",
                  "    response.data.forEach((version, index) => {",
                  "        console.log(`Version ${index + 1}: ${version.versionNumber} - ${version.changeType} at ${version.createdAt}`);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/versions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "versions"]
            }
          }
        },
        {
          "name": "Get AI Drafts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log(`Found ${response.data.length} AI drafts`);",
                  "    response.data.forEach((draft, index) => {",
                  "        console.log(`Draft ${index + 1}: ${draft.modelUsed} - Quality: ${draft.qualityScore}, Type: ${draft.generationType}`);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/ai-drafts?model=claude&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "ai-drafts"],
              "query": [
                {
                  "key": "model",
                  "value": "claude",
                  "description": "Filter by AI model (optional)"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Limit number of results (1-50)"
                }
              ]
            }
          }
        },
        {
          "name": "Get Review History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log(`Found ${response.data.reviews.length} review entries`);",
                  "    response.data.reviews.forEach((review, index) => {",
                  "        console.log(`Review ${index + 1}: ${review.action} by ${review.reviewerName} - ${review.reviewType}`);",
                  "    });",
                  "    console.log('Content Info:', response.data.content.title, '- State:', response.data.content.reviewState);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content/{{contentId}}/review-history",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content", "{{contentId}}", "review-history"]
            }
          }
        }
      ]
    },
    {
      "name": "8. Content Listing & Search",
      "item": [
        {
          "name": "List All Content",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content"]
            }
          }
        },
        {
          "name": "Filter by Campaign",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content?campaignId={{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content"],
              "query": [
                {
                  "key": "campaignId",
                  "value": "{{campaignId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Filter by Review State",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content?reviewState=approved",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content"],
              "query": [
                {
                  "key": "reviewState",
                  "value": "approved"
                }
              ]
            }
          }
        },
        {
          "name": "Filter by Language",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content?language=es",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content"],
              "query": [
                {
                  "key": "language",
                  "value": "es"
                }
              ]
            }
          }
        },
        {
          "name": "Filter by Content Type",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content?contentType=blog_post",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content"],
              "query": [
                {
                  "key": "contentType",
                  "value": "blog_post",
                  "description": "Options: blog_post, social_media, email_marketing, product_description"
                }
              ]
            }
          }
        },
        {
          "name": "Filter by Priority",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content?priority=high",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content"],
              "query": [
                {
                  "key": "priority",
                  "value": "high",
                  "description": "Options: low, medium, high, critical"
                }
              ]
            }
          }
        },
        {
          "name": "Advanced Content Search",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log(`Found ${response.data.length} content pieces matching criteria`);",
                  "    response.data.forEach((content, index) => {",
                  "        console.log(`${index + 1}. ${content.title} - ${content.reviewState} (${content.contentType})`);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/content?campaignId={{campaignId}}&reviewState=approved&language=en&contentType=blog_post&priority=high&limit=20&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["api", "content"],
              "query": [
                {
                  "key": "campaignId",
                  "value": "{{campaignId}}",
                  "description": "Filter by specific campaign"
                },
                {
                  "key": "reviewState",
                  "value": "approved",
                  "description": "Options: draft, pending_review, reviewed, approved, rejected, ai_suggested"
                },
                {
                  "key": "language",
                  "value": "en",
                  "description": "Target language filter"
                },
                {
                  "key": "contentType",
                  "value": "blog_post",
                  "description": "Content type filter"
                },
                {
                  "key": "priority",
                  "value": "high",
                  "description": "Priority level filter"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of results to return"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Pagination offset"
                }
              ]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001"
    }
  ]
}